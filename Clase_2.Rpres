Clase 2: Leer archivos
========================================================
author: Erick Cuevas Fernández 
date: 31-08-2019
autosize: true

Tipos de archivos más usados
========================================================

**.csv**

`read.csv(file, header = TRUE, sep = ",", quote = "\"", dec = ".", fill = TRUE, comment.char = "", ...)`

`read.csv2(file, header = TRUE, sep = ";", quote = "\"", dec = ",", fill = TRUE, comment.char = "", ...)`

**Tambien podemos leer archivos separados por espacio y tabuladores:**

- `read.table(file, header = FALSE, sep = "", quote = "\"'", dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"), row.names, col.names, as.is = !stringsAsFactors, na.strings = "NA", colClasses = NA, nrows = -1, skip = 0, check.names = TRUE, fill = !blank.lines.skip, strip.white = FALSE, blank.lines.skip = TRUE, comment.char = "#", allowEscapes = FALSE, flush = FALSE, stringsAsFactors = default.stringsAsFactors(), fileEncoding = "", encoding = "unknown", text, skipNul = FALSE)`

- `read.delim(file, header = TRUE, sep = "\t", quote = "\"", dec = ".", fill = TRUE, comment.char = "", ...)`

- `read.delim2(file, header = TRUE, sep = "\t", quote = "\"", dec = ",", fill = TRUE, comment.char = "", ...)`



Ejemplo con una base de datos "Heart Diseases Databases"
========================================================
```{r}
names_data <- c("age", "sex", "cp", "trestbps", "chol", "fbs", "restecg",
                "thalach", "exang", "oldpeak", "slope", "ca", "thal", "num")
data_cleveland <- read.csv("Datasets/processed.cleveland.data")
colnames(data_cleveland) <- names_data

str(data_cleveland)
```


**Ejercicio:**

Carga los archivos como csv:

- processed.hungarian.data
- processed.switzerland.data
- processed.va.data

Una vez caegados, nombra las columnas usando el vector *names_data*

JSON
========================================================
**.json**

```{r}
library(jsonlite)

```

*fromJSON()*

```{r}
id <- 681  
url_chem <- paste0("https://pubchem.ncbi.nlm.nih.gov/rest/pug_view/data/compound/"
                   ,id,
                   "/json")

response <- fromJSON(url_chem)

# str(response)

archivo_sections<-response$Record$Section$Section
```

Desde JSON obtenemos una lista o un data.frame, y ya que sabemos manejar listas, podemos empezar a obtener los datos que deseamos.
