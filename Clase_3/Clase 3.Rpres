Clase 3
========================================================
author: Erick Cuevas Fernández
date: 05 septiembre 2019
autosize: true

Análisis exploratorio de datos
========================================================
*Paso 1. Conocer estructura de datos*

*Paso 2. Obtener y leer datos*

**Paso 3. ¿Qué me dicen mis datos?**

```{r}
# devtools::install_github("Erickcufe/seekerBio")

# sleep_disorder <- seekerBio::seeker_gwas("Sleep Disorder")

# write.csv(sleep_disorder, "Clase_3/sleep_disorder.csv")

# paths <- seekerBio::seeker_gen_pathway(sleep_disorder$GeneSymbol)

# write.csv(paths, "Clase_3/Paths_sleep.csv")

# Freq <- seekerBio::seeker_snp_freq(sleep_disorder$SNPS)

# write.csv(Freq, "Clase_3/Freq_sleep.csv")

```

Para afianzar lo aprendido en la clase anterior:

- Lee/carga el archivo *sleep_disorder.csv*
- Lee/carga el archivo *Paths_sleep.csv*
- Lee/carga el archivo *Freq_sleep.csv*
- Lee/carga el archivo de la carpeta **Seccion_nutricion**: *Cuestionario_de_Problemas_de_Suenno*

Recuerda que con **foreing::read.dta(file.dta)** tambien lo puedes hacer

Para calentar motores...  Missing Values
========================================================
Un vistazo a los datos


```{r}
sleep_disorder_mx <- read.csv("/Users/erickCuevas/Documents/GitProyects/Curso-R-2019/Seccion_Nutricion/Cuestionario_de_Problemas_de_Suenno/ensanut_suenno_16112016.csv")

is.na(sleep_disorder_mx)


```


========================================================
Un vistazo a los datos
```{r}
summary(sleep_disorder_mx)

```

========================================================
Un vistazo a los datos

```{r}
str(sleep_disorder_mx)
```

========================================================

```{r}

#Limpieza selectiva de los datos sin valor 
#Limpiar NA de solamente la variable sexo
sleep_disorder_mx.cleaned<-sleep_disorder_mx[!is.na(sleep_disorder_mx$sexo),]
#Filas completas para un data frame 
# complete.cases(sleep_disorder_mx) #Checa en que altura de fila hay un NA
sleep_disorder_mx.cleaned.2<- sleep_disorder_mx[complete.cases(sleep_disorder_mx),]

#Convertir algun valor en NA
sleep_disorder_mx$sexo[sleep_disorder_mx$padormir1=="?"]<-NA

```

========================================================

```{r}
#Medidas de centralización y dispersión
mean(sleep_disorder_mx$cinturaprom) #Devuelve NA porque aun tiene NA
mean(sleep_disorder_mx$cinturaprom, na.rm=TRUE) #Quita los NA y nos arroja un resultado

sd(sleep_disorder_mx$cinturaprom)
sd(sleep_disorder_mx$cinturaprom,na.rm=TRUE)

```

Replace Missing
========================================================

```{r}
#Genera una nueva columna, reemplazando NA con el promedio de las observaciones
sleep_disorder_mx$cinturaprom.mean <- ifelse(
                  is.na(sleep_disorder_mx$cinturaprom), #Si esto es verdad
                  mean(sleep_disorder_mx$cinturaprom, na.rm=TRUE), #se ejecuta esto
                      sleep_disorder_mx$cinturaprom #sino pongo el valor original
                           )

```

Evitando duplicados
========================================================

```{r}
family.salary=c(40000,60000,50000,80000,60000,70000,60000)
family.size=c(4,3,2,2,3,4,3)
family.car=c("Lujo","Compacto","Utilitario","Lujo","Compacto","Compacto","Compacto")

family<-data.frame(family.salary,family.size,family.car)
family.unique <- unique(family)

duplicated(family)
family[duplicated(family),]
```

Vamos más alla
========================================================
Hay que quedarnos solo con variables numericas que nos puedan interesar, eliminar columnas que tengan **NAs**, y eliminar duplicados. 

```{r}
selected <- data.frame(sleep_disorder_mx$cintura, sleep_disorder_mx$cintura2, sleep_disorder_mx$rcintura, sleep_disorder_mx$imc, sleep_disorder_mx$horasueno, sleep_disorder_mx$calidad, sleep_disorder_mx$volronquido, sleep_disorder_mx$frecron, sleep_disorder_mx$hta)

selected <- na.omit(selected)

colnames(selected) <- c("cintura","cintura2", "rcintura", "imc", "horasueno", "calidad",
                        "volronquido", "frecron", "hta")

selected <- unique(selected)

selected.cor<-cor(selected, method = "pearson")
round(selected.cor, digits = 2)


```

========================================================

```{r}
corrplot::corrplot(selected.cor)
```
 
